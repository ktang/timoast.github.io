<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>DNAwesome</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2014-08-24T18:18:46+08:00</updated>
 <id></id>
 <author>
   <name>Tim Stuart</name>
   <email>timstuart90@gmail.com</email>
 </author>

 
 <entry>
   <title>Useful Linux/Unix commands</title>
   <link href="//2014/08/24/UsefulCommands.MARKUP/"/>
   <updated>2014-08-24T00:00:00+08:00</updated>
   <id>/2014/08/24/UsefulCommands.MARKUP</id>
   <content type="html">&lt;h2&gt;Do something in a range&lt;/h2&gt;

&lt;p&gt;Move files&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; i in &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;seq 10&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; mv chr&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; ../genomes/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; directory in ./*&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -d &lt;span class=&quot;s2&quot;&gt;&amp;quot;$directory&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$directory&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; myfile in &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ls -d *.sra&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
            mv &lt;span class=&quot;nv&quot;&gt;$myfile&lt;/span&gt; /home/tstuart/working_data/1000genomes/&lt;span class=&quot;nv&quot;&gt;$myfile&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
    &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;GNU Screen&lt;/h2&gt;

&lt;p&gt;Start screen: &lt;code&gt;screen -S [screen name]&lt;/code&gt;&lt;br&gt;
List screens: &lt;code&gt;screen -list&lt;/code&gt;&lt;br&gt;
Detach: &lt;code&gt;screen -d&lt;/code&gt;&lt;br&gt;
Attach: &lt;code&gt;screen -r&lt;/code&gt;&lt;br&gt;
Close screen: &lt;code&gt;ctr-a-d&lt;/code&gt;&lt;br&gt;
Kill screen: &lt;code&gt;ctr-a :quit&lt;/code&gt;  &lt;/p&gt;

&lt;h2&gt;Searching&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;grep &lt;span class=&quot;s1&quot;&gt;&amp;#39;text&amp;#39;&lt;/span&gt; filename
grep &lt;span class=&quot;s1&quot;&gt;&amp;#39;text&amp;#39;&lt;/span&gt; file1 file2 file3
grep &lt;span class=&quot;s1&quot;&gt;&amp;#39;text1 text2&amp;#39;&lt;/span&gt; filename
grep --color &lt;span class=&quot;s1&quot;&gt;&amp;#39;text&amp;#39;&lt;/span&gt; filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Search all files in a directory, show output in less  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;grep -r &lt;span class=&quot;s1&quot;&gt;&amp;#39;text&amp;#39;&lt;/span&gt; /home/usr/ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; less
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Search for multiple strings  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;egrep &lt;span class=&quot;s1&quot;&gt;&amp;#39;(AT4G40030)|(AT4G40040)|(AT5G10980)&amp;#39;&lt;/span&gt; * &amp;gt; h3.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Pipe output into file&lt;/h2&gt;

&lt;h4&gt;Overwrite contents of file&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;grep &lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; filename.txt &amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Append to file&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;grep &lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; filename.txt &amp;gt;&amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Counting&lt;/h2&gt;

&lt;h4&gt;Count lines in chr1 file&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wc -l chr1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Count characters in chr1 file&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wc -c chr1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;List&lt;/h2&gt;

&lt;p&gt;List and sort  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ls -ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;List and sort by size  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ls -ls -S
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Count number of directories in current directory  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ls -l &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep ^d &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; wc -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Sorting&lt;/h2&gt;

&lt;p&gt;Sort file by numerical order of first column, save as sorted_list.txt  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sort -nk &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; list.txt &amp;gt; sorted_list.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sort file by order of first column, then numerical order of second column, save as sorted_list.txt  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sort -k1,1 -nk2,2 list.txt &amp;gt; sorted_list.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sort descending  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sort -rn -k3 file.txt &amp;gt; sorted.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;overwrite  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sort -rn -k3 -o file.txt file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Rows&lt;/h2&gt;

&lt;p&gt;Delete first line&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sed 1d file.txt &amp;gt; headerless_file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete lines 1-3 inclusive  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sed 1,3d file.txt &amp;gt; newfile.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete lines containing string  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sed &lt;span class=&quot;s1&quot;&gt;&amp;#39;/ATC/d&amp;#39;&lt;/span&gt; file.txt &amp;gt; file_mod.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Overwrite file  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sed -i.bak 1d file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Columns&lt;/h2&gt;

&lt;p&gt;Write columns to new file. Can also reorder columns.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;BEGIN {FS=OFS=&amp;quot;\t&amp;quot;} {print $2,$4,$5,$6,$7,$8,$1,$3}&amp;#39;&lt;/span&gt; file.txt &amp;gt; outfile.txt
awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;BEGIN {FS=OFS=&amp;quot;\t&amp;quot;} {print $7,$1,$8,$2,$3,$4,$5,$6}&amp;#39;&lt;/span&gt; cmt2_targets.tsv &amp;gt; cmt2_targets_ordered.tsv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add column  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;{print $0, &amp;quot;cmt2&amp;quot;}&amp;#39;&lt;/span&gt; cmt2_targets_ordered.tsv &amp;gt; newfile.tsv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remove first column from all files  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; myfile in &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ls&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;BEGIN {FS=OFS=&amp;quot;\t&amp;quot;} {$1=&amp;quot;&amp;quot;;sub(&amp;quot;\t&amp;quot;,&amp;quot;&amp;quot;)}1&amp;#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$myfile&lt;/span&gt; &amp;gt; mod_&lt;span class=&quot;nv&quot;&gt;$myfile&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Joining files&lt;/h2&gt;

&lt;p&gt;Join files with each starting on a new line  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; filename in *.fa&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    cat &lt;span class=&quot;s2&quot;&gt;&amp;quot;${filename}&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; &amp;gt; output.fa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Comparing Files&lt;/h2&gt;

&lt;p&gt;Files should first be sorted&lt;/p&gt;

&lt;p&gt;Find lines that are common or different between two files  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;comm -i file1 file2 &amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; is case-insensitive&lt;br&gt;&lt;/li&gt;
&lt;li&gt;outputs three columns. First is lines only in file1, second is lines only in file2, third is lines common in both.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Compressing files&lt;/h2&gt;

&lt;p&gt;Compress recursively  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;tar cvfz slam.tgz slam/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Download data from SRA&lt;/h2&gt;

&lt;h3&gt;Using wget&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;wget -r --no-parent --reject &amp;quot;index.html*&amp;quot; ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP005/SRP005399/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can download a list of accessions from the SRA website and use that file to call &lt;code&gt;wget&lt;/code&gt; for all the accessions.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SraAccList.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accessions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accessions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Downloading {a}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wget&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;-r&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;--no-parent&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR/SRR492/{acc}/*&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Split into fastq files&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;fastq-dump --split-3 ./SRP005399/*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;--split-3&lt;/code&gt; causes PE files to be split into &lt;code&gt;*_1.fastq&lt;/code&gt; and &lt;code&gt;*_2.fastq&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;bash loop  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; directory in ./*&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -d &lt;span class=&quot;s2&quot;&gt;&amp;quot;$directory&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$directory&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; myfile in &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ls -d *.sra&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
            fastq-dump --split-3 -v &lt;span class=&quot;nv&quot;&gt;$myfile&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
    &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Python function  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fastqSplit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;.sra&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;processing {n}&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;fastq-dump&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;--split-3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;-v&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Using SRA toolkit&lt;/h3&gt;

&lt;p&gt;SRA toolkit doesn&amp;#39;t seem to work well for downloading bulk data. wget is a much better option as it allows download of whole folders, gives more descriptive output as it goes. SRA often fails and sometimes gives no error. Download with wget and use fastq-split to get fastq files.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;fastq-dump SRR534224 &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;RNA-seq&lt;/h2&gt;

&lt;h3&gt;Mapping&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tophat -p8 -G /home/lister/working_data/data/genomes/annotations/tair10/TAIR10_gene_TE_illumina.gtf --transcriptome-index=transcript_index/tair10 /home/lister/working_data/data/genomes/bowtie2_indexes/tair9 SRR501604.fastq,SRR501605.fastq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--transcriptome-index=transcript_index/tair10&lt;/code&gt; creates transcriptome index file saved in transcript_index/ with name &lt;code&gt;tair10.*&lt;/code&gt;. This can be reused if mapping to the same transcriptome (ie. gff file)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p8&lt;/code&gt; uses 8 cores&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G&lt;/code&gt; specifies gff file. Optional&lt;br&gt;&lt;/li&gt;
&lt;li&gt;If using PE reads check manual&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Bedtools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://quinlanlab.org/tutorials/cshl2013/bedtools.html&quot;&gt;Good tutorial from the Quinlan lab&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Need to order files so that chromosome, start, stop and first three columns (BED format). Also need to remove header. Can do these steps with &lt;code&gt;awk&lt;/code&gt; and &lt;code&gt;sed 1d&lt;/code&gt;.  &lt;/p&gt;

&lt;h3&gt;Merge&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;bedtools merge -i dmrs_ddc.tsv -d &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt; &amp;gt; dmrs_ddc_merged.tsv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; is distance between coordinates that will still be merged&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; is input file&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Intersect&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;bedtools intersect -a tair10_tes.txt -b dmrs_ddc_merged.tsv -wa -f 0.50 &amp;gt; ddc_targets.tsv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; is file a&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; is file b&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-wa&lt;/code&gt; is write a&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; is minimum overlap percentage&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Bowtie&lt;/h2&gt;

&lt;h3&gt;Mapping PE data&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bowtie2 -p8 --local --fr -q -R 5 -N 1 -x [path/to/bowtie2/index] -X 1000 -1 [mate1.fq] -2 [mate2.fq] -S [alignment.sam] --un-conc ./discordant/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; is number of processors&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--local&lt;/code&gt; allows soft-clipping of reads to improve alignment&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt; specifies that reads are in fastq format&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; gives path to index&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt; gives name of output file&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt; is number of times bowtie will try to &amp;#39;re-seed&amp;#39; repetitive seeds. Default 2&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N&lt;/code&gt; is number of mismatches allowed in seed. 0 or 1.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-mixed&lt;/code&gt; tells bowtie to find alignments only when both pairs can be aligned.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--fr&lt;/code&gt; means mate pairs are ordered in forward then reverse orientation. Can do &lt;code&gt;--ff&lt;/code&gt;, &lt;code&gt;--rf&lt;/code&gt;.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt; specifies maximum insert size. Default 500.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; specifies minimum insert size. Default 0 (no minimum).&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--un-conc&lt;/code&gt; specifies path and file to write discordant alignments to&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Highly Multiplexed Subcellular RNA Sequencing in Situ</title>
   <link href="//2014/03/04/highly-multiplexed-subcellular-rna-sequencing-in-situ/"/>
   <updated>2014-03-04T16:18:11+08:00</updated>
   <id>/2014/03/04/highly-multiplexed-subcellular-rna-sequencing-in-situ</id>
   <content type="html">&lt;p&gt;An improved method capable of sequencing RNA inside fixed cells (FISSEQ) was published in the early issue of &lt;i&gt;Science&lt;/i&gt; last week, titled &lt;i&gt;Highly Multiplexed Subcellular RNA Sequencing in Situ &lt;/i&gt;(1). It&#39;s an interesting method, and I&#39;m going to go over it briefly here.&lt;/p&gt;
&lt;p&gt;Firstly, the method is not new; it was developed in 2003, and this is stated in the first paragraph of the paper. The original 2003 method was conceptually the same, involving sequencing of DNA bases through the incorporation of fluorescent nucleotides. However, this was only capable of sequencing libraries fixed in gel on a glass slide, and produced a measly 8 bp of sequence (2). Needless to say, huge improvements in sequencing technologies have been made over the past ten years.&lt;/p&gt;
&lt;p&gt;The new method presented by Lee et al. works in the following way. Firstly, cells are fixed with formaldehyde and permeabilised, and an &lt;em&gt;in situ&lt;/em&gt; reverse transcription reaction performed with random hexamers and aminoallyl dUTP. cDNA is then circularised and amplified by rolling circle amplification. The authors report that the use of RNaseA improves the circularisation of cDNAs for rolling circle amplification (an RNaseH digest is also done after the RT to degrade RNA templates). dUTPs incorporated during the RT then allow crosslinking of the amplicons, through the addition of BS(PEG)9. This improves spacial stabilisation of the library &lt;em&gt;in situ&lt;/em&gt;&lt;em&gt;. &lt;/em&gt;Addition of BS(PEG)9 is also helpful in reducing non-specific probe binding. Next, a formamide wash removes unlinked cDNA amplicons, improving amplicon density, and fluorescent probes are hybridised to the adapter sequence. Finally, SOLiD sequencing-by-ligation can be performed, and the authors report read lengths of 27 bp (up from 8 bp in 2003), with a median error rate of 0.64% (lower than the 1.33% of &lt;a href=&quot;http://res.illumina.com/documents/products/datasheets/datasheet_genomic_sequence.pdf&quot; target=&quot;_blank&quot;&gt;Illumina&lt;/a&gt; sequencing). Additionally, this method provides subcellular localisation data for reads. The end result is a bunch of cool flashing dots inside a cell:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;img src=&quot;/assets/s5_reduced1.gif&quot; width=&quot;250&quot; height=&quot;250&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Video S5 from Lee et al. (2014) (1).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The authors have compared the FISSEQ method to RNA-seq and gene expression arrays, and find a reasonably good correlation between some genes (those that were moderately expressed), though overall the correlation is poor:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-55&quot; alt=&quot;S11C&quot; src=&quot;assets/s11c.png&quot; width=&quot;300&quot; height=&quot;220&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
Figure S11C from Lee et al. (2014) (1).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;There also seems to be a partial depletion of reads involved in RNA and protein processing, and the authors suggest that this could be due to some cellular structures, such as the nucleolus, being inaccessible by the FISSEQ method. I would agree that this is the case, since there were far fewer rRNA reads detected than would be expected (only 42.7% in primary fibroblasts) and it&#39;s pretty clear from some of the figures and videos that there are amplicon-free regions:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-67&quot; alt=&quot;S6B&quot; src=&quot;assets/s6b.png&quot; width=&quot;300&quot; height=&quot;296&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Figure S6B from Lee et al. (2014) (1).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Actually, it could be a good thing that some parts of the cell are not covered by FISSEQ, particularly the nucleolus, as this seems to provide a partial rRNA depletion.&lt;/p&gt;
&lt;p&gt;Overall, I think the method is an exciting one, and an impressive achievement with some promising applications in the future—the authors suggest &lt;em&gt;in situ &lt;/em&gt;cell type identification based on expression profiling, and high-throughput &lt;em&gt;in situ &lt;/em&gt;mutation detection. However, these applications are likely to be held back until longer read lengths can be achieved, and the protocol can simplified to reduce hands-on time. From the supplementary methods, I estimated just the SOLiD sequencing to take around two hours per cycle. Considering 27 cycles were done in these experiments, that would total 54 hours of hands-on lab time, for only 27 bp of sequence. Little mention is made of the amount of time needed for downstream informatics.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sciencemag.org/content/early/2014/02/26/science.1250212&quot; target=&quot;_blank&quot;&gt;1. &lt;span style=&quot;line-height:1.5em;&quot;&gt;Lee, J. H., Daugharthy, E. R., Scheiman, J., Kalhor, R., Yang, J. L., Ferrante, T. C., et al. (2014). Highly Multiplexed Subcellular RNA Sequencing in Situ. Science. doi:10.1126/science.1250212&lt;/span&gt;&lt;/a&gt;&lt;a href=&quot;http://www.sciencemag.org/content/early/2014/02/26/science.1250212&quot; target=&quot;_blank&quot;&gt;&lt;br /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://arep.med.harvard.edu/pdf/Mitra03c.pdf&quot; target=&quot;_blank&quot;&gt;2. Mitra, R. D., Shendure, J., Olejnik, J., Edyta-Krzymanska-Olejnik, &amp;amp; Church, G. M. (2003). Fluorescent in situ sequencing on polymerase colonies. Analytical Biochemistry, 320(1), 55–65. doi:10.1016/S0003-2697(03)00291-4&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
